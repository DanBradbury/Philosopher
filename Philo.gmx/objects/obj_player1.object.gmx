<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hand_size = 0;
hand = ds_list_create();

selected = -1;
_play_formulation = false;

played = ds_list_create();
ds_list_add(played, "none");
ds_list_add(played, "none");
ds_list_add(played, "none");
ds_list_add(played, "none");
ds_list_add(played, "none");
ds_list_add(played, "none");
ds_list_add(played, "none");

cards_played = 0;
elements_played = 0;
process_played = 0;
philo_played = 0;

global.p1_transLevel = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> global._phase = global._active_phase;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global._phase = "FORMULATION";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
// determine what card is being moused over
selected = -1;
for(i=0;i&lt;hand_size;i++){
    factor = 100*i;
    if(mouse_x &gt; view_xview[view_current]+view_wview[view_current]/2-300-124+factor &amp;&amp; mouse_x &lt; view_xview[view_current]+view_wview[view_current]/2-300+124+factor &amp;&amp; mouse_y &gt; y+400-214 &amp;&amp; mouse_y &lt; 400+ 428-214){
        selected = i;
    }
}

// play card if we have a selection
if(selected != -1 &amp;&amp; mouse_check_button(mb_left) &amp;&amp; (global._phase == "FORMULATION" || global._phase == "TRANSMUTATION") &amp;&amp; cards_played &lt; 6 ){
    p = false; // flag to see if we have played a process card already
    if( ds_list_find_value(hand, selected) == "D" ||
        ds_list_find_value(hand, selected) == "I" ||
        ds_list_find_value(hand, selected) == "T"){
        if(process_played == 1){
            p = true;
        }else{
            process_played = 1;
            ds_list_replace(played, 0, ds_list_find_value(hand, selected));   
        }
    }else{
        ds_list_replace(played, 1+elements_played, ds_list_find_value(hand, selected));
        elements_played += 1;
    }
    
    if(p == false){
        ds_list_replace(hand, selected, "none"); // think this is the trouble line
        for(i=selected;i&lt;hand_size-1;i++){
           ds_list_replace(hand, i, ds_list_find_value(hand, i+1));
        }
        hand_size -= 1;
       
        global._active_phase = global._phase;
        global._phase = "IDLE";
        alarm[1] = 10;
        cards_played += 1;
    }
}else if(selected != -1 &amp;&amp; mouse_check_button(mb_left) &amp;&amp; global._phase == "DISCARD"){
    hand_size -= 1;
    ds_list_delete(hand, selected);
    selected = -1;
    global._active_phase = global._phase;
    global._phase = "IDLE";
    alarm[1] = 10;
}
if(selected != -1 &amp;&amp; mouse_check_button(mb_right)){
    c = instance_create(x,y,card_zoom);
    c.selected_card = ds_list_find_value(hand, selected);
}

// check skip phase
if(mouse_check_button(mb_left)){
    if(mouse_x &gt; 10 &amp;&amp;
        mouse_x &lt; 10+150 &amp;&amp;
        mouse_y &gt; view_hview[view_current]-150 &amp;&amp;
        mouse_y &lt;  view_hview[view_current]){
            if(global._phase == "FORMULATION"){
                global._active_phase = "TRANSMUTATION";
                global._phase = "IDLE";
                alarm[1] = 10;
            }else if(global._phase == "TRANSMUTATION"){
                global._active_phase = "DISCARD";
                global._phase = "IDLE";
                alarm[1] = 10;
            }else if(global._phase == "INIT"){
                //init_element_face_up(obj_element_deck);
                for(g=0;g&lt;3;g++){
                    add_element_to_hand(obj_player1);
                }
                global._phase = "DRAW";
            }
    }
}

//check return hand
if(mouse_check_button(mb_left)){
    if(mouse_x &gt; 10+80 &amp;&amp;
        mouse_x &lt; 10+80+75 &amp;&amp;
        mouse_y &gt; view_hview[view_current]-300 &amp;&amp;
        mouse_y &lt;  view_hview[view_current]-300+75){
            global._active_phase = global._phase;
            global._phase = "return cards";
            for(i=0;i&lt;cards_played;i++){
                if(process_played == 0){
                    ds_list_replace(hand, hand_size, ds_list_find_value(played, i+1));
                }else{
                    ds_list_replace(hand, hand_size, ds_list_find_value(played, i));
                }
                //ds_list_add(hand, ds_list_find_value(played, i));
                hand_size += 1;
                if(process_played == 0){
                    ds_list_replace(played, i+1, "none");
                }else{               
                    ds_list_replace(played, i, "none");
                }
            }
            cards_played = 0;
            elements_played = 0;
            process_played = 0;
    }
}

//check click play button
if(mouse_check_button(mb_left)){
    if(mouse_x &gt; 10 &amp;&amp;
        mouse_x &lt; 10+75 &amp;&amp;
        mouse_y &gt; view_hview[view_current]-300 &amp;&amp;
        mouse_y &lt;  view_hview[view_current]-300+75 &amp;&amp; global._valid_play){
        
        //find out which spell was cast
        play = "";
        if(cards_played == 2 &amp;&amp; elements_played == 1 &amp;&amp; process_played == 1){
            play = "FORM-ELEM";
            active_card = ds_list_find_value(played, 1);
        }else if(cards_played == 5 &amp;&amp; elements_played==4 &amp;&amp; process_played == 1){
            play = "FORM-PROC";
            active_card = ds_list_find_value(played, 0);
        }else if(cards_played == 1 &amp;&amp; philo_played == 1){
            play = "SPECIAL";
        }else if(global._phase == "TRANSMUTATION"){
            global.p1_transLevel += 1;
            active_card = "TRANSMUTATE";
        }
            for(i=0;i&lt;cards_played;i++){
                t = ds_list_find_value(played, 0);
                if(t=="I" || t=="T" || t=="D"){
                    ds_list_add(obj_process_deck.discard, t);
                }else{
                    ds_list_add(obj_element_deck.discard, t);
                }
                ds_list_delete(played, i);
            }
            cards_played = 0;
            elements_played = 0;
            process_played = 0;
            
            global._active_phase = "FORMULATION";
            global._phase = "ACTION";
            alarm[1] = 30; 
    }
}

//TODO: move this to ref
if(global._phase == "FORMULATION" &amp;&amp; _play_formulation == false){
    global._phase = "TRANSMUATION";
}

// restart level
if(keyboard_check(vk_backspace)){
    game_restart();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_background, 0, 0, 0, 1, 1, 0, c_white, 1);


if(global._phase == "FORMULATION" || global._phase == "DISCARD" || global._phase == "TRANSMUTATION"){
    draw_set_color(c_green);
}else{
    draw_set_color(c_red);
}

// draw cards in play
if(cards_played &gt; 0){
    
    for(i=0;i&lt;=cards_played-process_played;i++){
        j = i % 3;
        factor = 186 *j;
        if(i&lt;=2){
            yfactor = 0;
        }else{
            yfactor = 290;
        }
            if(ds_list_find_value(played, i) =="ARSENIC"){
                draw_sprite_ext(sprite7_ArsenicF,0,view_xview[view_current]+800+factor,y-45+yfactor,0.1, 0.1, 0, c_white, 1);
            }else if(ds_list_find_value(played, i) =="SULFUR"){
                draw_sprite_ext(sprite24_Sulfur,0,view_xview[view_current]+800+factor,y-45+yfactor,0.1, 0.1, 0, c_white, 1);    
            }else if(ds_list_find_value(played, i) =="MAGNESIUM"){
                draw_sprite_ext(sprite15_Magnesium,0,view_xview[view_current]+800+factor,y-45+yfactor,0.1, 0.1, 0, c_white, 1);    
            }else if(ds_list_find_value(played, i) =="ZINC"){
                draw_sprite_ext(sprite29_Zinc,0,view_xview[view_current]+800+factor,y-45+yfactor,0.1, 0.1, 0, c_white, 1);    
            }else if(ds_list_find_value(played, i) =="AIR"){
                draw_sprite_ext(sprite1_Air,0,view_xview[view_current]+800+factor,y-45+yfactor,0.1, 0.1, 0, c_white, 1);    
            }else if(ds_list_find_value(played, i) =="EARTH"){
                draw_sprite_ext(sprite10_earth,0,view_xview[view_current]+800+factor,y-45+yfactor,0.1, 0.1, 0, c_white, 1);    
            }else if(ds_list_find_value(played, i) =="FIRE"){
                draw_sprite_ext(sprite2_Alchemy_fire_final,0,view_xview[view_current]+800+factor,y-45+yfactor,0.1, 0.1, 0, c_white, 1);    
            }else if(ds_list_find_value(played, i) =="WATER"){
                draw_sprite_ext(sprite27_Water,0,view_xview[view_current]+800+factor,y-45+yfactor,0.1, 0.1, 0, c_white, 1);    
            }else if(ds_list_find_value(played, i) =="PHILO"){
                draw_sprite_ext(sprite19_PhilosophersStone,0,view_xview[view_current]+800+factor,y-45+yfactor,0.1, 0.1, 0, c_white, 1);    
            }else if(ds_list_find_value(played, i) =="I"){
                draw_sprite_ext(sprite12_Incineration,0,view_xview[view_current]+800+factor,y-45+yfactor,0.1, 0.1, 0, c_white, 1);    
            }else if(ds_list_find_value(played, i) =="D"){
                draw_sprite_ext(sprite9_Distillation,0,view_xview[view_current]+800+factor,y-45+yfactor,0.1, 0.1, 0, c_white, 1);    
            }else if(ds_list_find_value(played, i) =="T"){
                draw_sprite_ext(sprite26_transformation,0,view_xview[view_current]+800+factor,y-45+yfactor,0.1, 0.1, 0, c_white, 1);    
            }
    }
}

rotation = -10;
draw_set_font(font0);

for(i=0;i&lt;hand_size;i++){
// determine the factor of adjutment
    if(i==0){
        factor = 0;
        //rotation = 15;
        rotation = 0;
    }else{
        if( i==1 ){
            //rotation = 10;
            rotation = 0;
        }else if (i==2){
            rotation = 0;
        }else{
            //rotation = -5;
            rotation = 0;
        }        
        factor = 100*i;
    }
    
        
    if(ds_list_find_value(hand, i) =="ARSENIC"){
        draw_sprite_ext(sprite7_ArsenicF,0,view_xview[view_current]+view_wview[view_current]/2+factor-300,y+400,0.3, 0.3, rotation, c_white, 1);
    }else if(ds_list_find_value(hand, i) =="SULFUR"){
        draw_sprite_ext(sprite24_Sulfur,0,view_xview[view_current]+view_wview[view_current]/2+factor-300,y+400,0.3, 0.3, rotation, c_white, 1);    
    }else if(ds_list_find_value(hand, i) =="MAGNESIUM"){
        draw_sprite_ext(sprite15_Magnesium,0,view_xview[view_current]+view_wview[view_current]/2+factor-300,y+400,0.3, 0.3, rotation, c_white, 1);    
    }else if(ds_list_find_value(hand, i) =="ZINC"){
        draw_sprite_ext(sprite29_Zinc,0,view_xview[view_current]+view_wview[view_current]/2+factor-300,y+400,0.3, 0.3, rotation, c_white, 1);    
    }else if(ds_list_find_value(hand, i) =="AIR"){
        draw_sprite_ext(sprite1_Air,0,view_xview[view_current]+view_wview[view_current]/2+factor-300,y+400,0.3, 0.3, rotation, c_white, 1);    
    }else if(ds_list_find_value(hand, i) =="EARTH"){
        draw_sprite_ext(sprite10_earth,0,view_xview[view_current]+view_wview[view_current]/2+factor-300,y+400,0.3, 0.3, rotation, c_white, 1);    
    }else if(ds_list_find_value(hand, i) =="FIRE"){
        draw_sprite_ext(sprite2_Alchemy_fire_final,0,view_xview[view_current]+view_wview[view_current]/2+factor-300,y+400,0.3, 0.3, rotation, c_white, 1);    
    }else if(ds_list_find_value(hand, i) =="WATER"){
        draw_sprite_ext(sprite27_Water,0,view_xview[view_current]+view_wview[view_current]/2+factor-300,y+400,0.3, 0.3, rotation, c_white, 1);    
    }else if(ds_list_find_value(hand, i) =="PHILO"){
        draw_sprite_ext(sprite19_PhilosophersStone,0,view_xview[view_current]+view_wview[view_current]/2+factor-300,y+400,0.3, 0.3, rotation, c_white, 1);    
    }else if(ds_list_find_value(hand, i) == "T"){
        draw_sprite_ext(sprite26_transformation,0,view_xview[view_current]+view_wview[view_current]/2+factor-300,y+400,0.3, 0.3, rotation, c_white, 1);    
    }else if(ds_list_find_value(hand, i) == "D"){
        draw_sprite_ext(sprite9_Distillation,0,view_xview[view_current]+view_wview[view_current]/2+factor-300,y+400,0.3, 0.3, rotation, c_white, 1);        
    }else if(ds_list_find_value(hand, i) == "I"){
        draw_sprite_ext(sprite12_Incineration,0,view_xview[view_current]+view_wview[view_current]/2+factor-300,y+400,0.3, 0.3, rotation, c_white, 1);        
    }
    draw_set_color(c_white);
    draw_text( view_xview[view_current]+view_wview[view_current]/2+factor-350,y+150, string(ds_list_find_value(hand,i)) );    
}

if(global._phase == "FORMULATION" || global._phase == "DISCARD" || global._phase == "TRANSMUTATION"){
    draw_set_color(c_green);
}else{
    draw_set_color(c_red);
}


// draw the selected card
if(selected != -1){
factor = selected*100; rotation = 0;
    if(ds_list_find_value(hand, selected) =="ARSENIC"){
        draw_sprite_ext(sprite7_ArsenicF,0,view_xview[view_current]+view_wview[view_current]/2+factor-300,y+400,0.3, 0.3, rotation, c_white, 1);
    }else if(ds_list_find_value(hand, selected) =="SULFUR"){
        draw_sprite_ext(sprite24_Sulfur,0,view_xview[view_current]+view_wview[view_current]/2+factor-300,y+400,0.3, 0.3, rotation, c_white, 1);    
    }else if(ds_list_find_value(hand, selected) =="MAGNESIUM"){
        draw_sprite_ext(sprite15_Magnesium,0,view_xview[view_current]+view_wview[view_current]/2+factor-300,y+400,0.3, 0.3, rotation, c_white, 1);    
    }else if(ds_list_find_value(hand, selected) =="ZINC"){
        draw_sprite_ext(sprite29_Zinc,0,view_xview[view_current]+view_wview[view_current]/2+factor-300,y+400,0.3, 0.3, rotation, c_white, 1);    
    }else if(ds_list_find_value(hand, selected) =="AIR"){
        draw_sprite_ext(sprite1_Air,0,view_xview[view_current]+view_wview[view_current]/2+factor-300,y+400,0.3, 0.3, rotation, c_white, 1);    
    }else if(ds_list_find_value(hand, selected) =="EARTH"){
        draw_sprite_ext(sprite10_earth,0,view_xview[view_current]+view_wview[view_current]/2+factor-300,y+400,0.3, 0.3, rotation, c_white, 1);    
    }else if(ds_list_find_value(hand, selected) =="FIRE"){
        draw_sprite_ext(sprite2_Alchemy_fire_final,0,view_xview[view_current]+view_wview[view_current]/2+factor-300,y+400,0.3, 0.3, rotation, c_white, 1);    
    }else if(ds_list_find_value(hand, selected) =="WATER"){
        draw_sprite_ext(sprite27_Water,0,view_xview[view_current]+view_wview[view_current]/2+factor-300,y+400,0.3, 0.3, rotation, c_white, 1);    
    }else if(ds_list_find_value(hand, selected) =="PHILO"){
        draw_sprite_ext(sprite19_PhilosophersStone,0,view_xview[view_current]+view_wview[view_current]/2+factor-300,y+400,0.3, 0.3, rotation, c_white, 1);    
    }else if(ds_list_find_value(hand, selected) == "T"){
        draw_sprite_ext(sprite26_transformation,0,view_xview[view_current]+view_wview[view_current]/2+factor-300,y+400,0.3, 0.3, rotation, c_white, 1);    
    }else if(ds_list_find_value(hand, selected) == "D"){
        draw_sprite_ext(sprite9_Distillation,0,view_xview[view_current]+view_wview[view_current]/2+factor-300,y+400,0.3, 0.3, rotation, c_white, 1);        
    }else if(ds_list_find_value(hand, selected) == "I"){
        draw_sprite_ext(sprite12_Incineration,0,view_xview[view_current]+view_wview[view_current]/2+factor-300,y+400,0.3, 0.3, rotation, c_white, 1);        
    }    
    draw_rectangle(view_xview[view_current]+view_wview[view_current]/2-300-124+factor,y+400-214, view_xview[view_current]+view_wview[view_current]/2-300+124+factor,y+400+ 428-214,true);

}




</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// DRAW DISPLAY CARD &amp; buttons
draw_set_font(transFont);
draw_set_color(c_white);
if(global._phase == "ACTION"){
    if(active_card =="ARSENIC"){
                draw_sprite_ext(sprite7_ArsenicF,0,view_wview[view_current]/2,view_hview[view_current]/2,0.4, 0.4, 0, c_white, 1);
            }else if(active_card =="SULFUR"){
                draw_sprite_ext(sprite24_Sulfur,0,view_wview[view_current]/2,view_hview[view_current]/2,0.4, 0.4, 0, c_white, 1);    
            }else if(active_card =="MAGNESIUM"){
                draw_sprite_ext(sprite15_Magnesium,0,view_wview[view_current]/2,view_hview[view_current]/2,0.4, 0.4, 0, c_white, 1);    
            }else if(active_card =="ZINC"){
                draw_sprite_ext(sprite29_Zinc,0,view_wview[view_current]/2,view_hview[view_current]/2,0.4, 0.4, 0, c_white, 1);    
            }else if(active_card =="AIR"){
                draw_sprite_ext(sprite1_Air,0,view_wview[view_current]/2,view_hview[view_current]/2,0.4, 0.4, 0, c_white, 1);    
            }else if(active_card =="EARTH"){
                draw_sprite_ext(sprite10_earth,0,view_wview[view_current]/2,view_hview[view_current]/2,0.4, 0.4, 0, c_white, 1);    
            }else if(active_card =="FIRE"){
                draw_sprite_ext(sprite2_Alchemy_fire_final,0,view_wview[view_current]/2,view_hview[view_current]/2,0.4, 0.4, 0, c_white, 1);    
            }else if(active_card =="WATER"){
                draw_sprite_ext(sprite27_Water,0,view_wview[view_current]/2,view_hview[view_current]/2,0.4, 0.4, 0, c_white, 1);    
            }else if(active_card =="PHILO"){
                draw_sprite_ext(sprite19_PhilosophersStone,0,view_wview[view_current]/2,view_hview[view_current]/2,0.4, 0.4, 0, c_white, 1);    
            }else if(active_card =="I"){
                draw_sprite_ext(sprite12_Incineration,0,view_wview[view_current]/2,view_hview[view_current]/2,0.4, 0.4, 0, c_white, 1);    
            }else if(active_card =="D"){
                draw_sprite_ext(sprite9_Distillation,0,view_wview[view_current]/2,view_hview[view_current]/2,0.4, 0.4, 0, c_white, 1);    
            }else if(active_card =="T"){
                draw_sprite_ext(sprite26_transformation,0,view_wview[view_current]/2,view_hview[view_current]/2,0.4, 0.4, 0, c_white, 1);    
            }else if(active_card == "TRANSMUTATE"){
                draw_text(room_width/2, room_height/2, "Leveled Up! #Entering "+obj_ref.trans_phases[global.p1_transLevel]);
            }
}
draw_sprite_ext(sprite_play,global._valid_play,10, view_hview[view_current]-300,0.25,0.25,0,c_white,1);
draw_sprite_ext(sprite_skip,0,10,view_hview[view_current]-150,0.5,0.5,0,c_white,1);
draw_sprite_ext(sprite_return_hand,0,10+80,view_hview[view_current]-300,0.25,0.25,0,c_white,1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(x,y,card_zoom);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
